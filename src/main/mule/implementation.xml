<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:db="http://www.mulesoft.org/schema/mule/db"
	xmlns:file="http://www.mulesoft.org/schema/mule/file"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd 
http://www.mulesoft.org/schema/mule/file http://www.mulesoft.org/schema/mule/file/current/mule-file.xsd 
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd">
	<flow name="GetMovies" doc:id="e15c9098-71e7-4413-b670-d85a50f9c3b7" >
		<set-variable value="#[message.attributes.queryParams.MovieName]" doc:name="MovieName" doc:id="8012aee2-fcf0-48bc-870a-03780c4912cf" variableName="MovieName"/>
		<choice doc:name="Choice" doc:id="dbc6310a-64f4-4658-9d6b-2464d512a792" >
			<when expression='#[(vars.MovieName)!= null]'>
				<db:select doc:name="Select All Movies" doc:id="7fe13096-0162-4f03-893d-72f33e48dcb2" config-ref="Database_Config">
			<db:sql><![CDATA[select * from movies where moviename =:moviename;]]></db:sql>
			<db:input-parameters><![CDATA[#[{
	"moviename": vars.MovieName
}]]]></db:input-parameters>
		</db:select>
				<choice doc:name="Choice" doc:id="34f1370c-3f1c-442a-9ab5-da930f1ee7b5" >
					<when expression="#[sizeOf(payload)&gt;0]">
						<ee:transform doc:name="Transform Message" doc:id="94ff8807-b5a1-4f1f-93f3-fff334b597bf">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
payload map ( payload01 , indexOfPayload01 ) -> {
	MovieID: payload01.movieid,
	MovieName: payload01.moviename default "",
	MovieDescription: payload01.moviedescription default "",
	"MovieLanguage": payload01.lang as String,
	Price: payload01.price default 0
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
					</when>
					<otherwise >
						<set-payload value='#["Sorry! This Movie Name is not Available"]' doc:name='"Sorry! This Movie Name is not Available"' doc:id="01aaf77c-2999-4baa-8e27-3e8a08801f7d" />
					</otherwise>
				</choice>
			</when>
			<otherwise>
				<db:select doc:name="Select" doc:id="a67931af-87c5-4bdc-aea4-034fd8a38a10" config-ref="Database_Config">
					<db:sql><![CDATA[select * from movies;]]></db:sql>
				</db:select>
				<ee:transform doc:name="Transform Message" doc:id="111767e4-1a89-4f1f-a69d-b7d891c941f1">
					<ee:message>
						<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
payload map ( payload01 , indexOfPayload01 ) -> {
	MovieID: payload01.movieid,
	MovieName: payload01.moviename default "",
	MovieDescription: payload01.moviedescription default "",
	"MovieLanguage": payload01.lang as String,
	Price: payload01.price default 0
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
			</otherwise>
		</choice>
	</flow>
	<flow name="GetMovieByID" doc:id="6566b523-c076-4f35-8b72-46ae3b0e293e" >
		<db:select doc:name="Select" doc:id="591a654d-cafe-4dcd-8f3e-01dccc635f58" config-ref="Database_Config">
			<db:sql><![CDATA[select  * from movies where movies.movieid = :ID;]]></db:sql>
			<db:input-parameters><![CDATA[#[{"ID":attributes.uriParams.movie_id}]]]></db:input-parameters>
		</db:select>
		<choice doc:name="Choice" doc:id="117e176d-97dd-4128-b033-45de765e6fa0" >
			<when expression="#[sizeOf(payload)&gt;0]">
				<ee:transform doc:name="Transform Message" doc:id="a0741dab-76f8-491b-80b5-8b3752181c9c">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
payload map ( payload01 , indexOfPayload01 ) -> {
	MovieName: payload01.moviename default "",
	MovieDescription: payload01.moviedescription default "",
	Language: payload01.lang default "",
	Price: payload01.price default 0
}
]]></ee:set-payload>
			</ee:message>
		</ee:transform>
			</when>
			<otherwise >
				<ee:transform doc:name="Transform Message" doc:id="495e1ee9-a150-47a7-b3b1-f1197086717b" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	"message": "No record found!"
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
			</otherwise>
		</choice>
		<logger level="INFO" doc:name="Logger" doc:id="2b951fde-ed2a-457a-8ad2-bedbb262b0ad" message="#[payload]" />
	
</flow>
	<flow name="GetShows" doc:id="4e979df7-ba23-41a6-9180-35ae7488cf7b" >
		<set-variable value="#[message.attributes.queryParams.language]" doc:name="language" doc:id="1c9b1a6b-5b0e-426d-8efe-ccf9ffcb4752" variableName="language"/>
		<set-variable value="#[message.attributes.queryParams.SeatType]" doc:name="SeatType" doc:id="33c17a88-dd4a-4d6b-954d-e5d6b96daa05" variableName="SeatType" />
		<choice doc:name="Choice" doc:id="b3449595-2dca-44ec-a2d9-c584db0104bf" >
			<when expression="#[(vars.language != null) and (vars.SeatType != null)]">
				<db:select doc:name="Select" doc:id="681b384c-4ce7-4804-b4f3-a2688bed2854" config-ref="Database_Config" >
					<db:sql ><![CDATA[select * from show where lang= :language and seattype= :SeatType;]]></db:sql>
					<db:input-parameters ><![CDATA[#[{
	"language": vars.language,
	"SeatType": vars.SeatType
}]]]></db:input-parameters>
				</db:select>
			</when>
			<when expression="#[(vars.language)!=null]">
				<db:select doc:name="Select" doc:id="fe6420f1-2aa1-4524-9b60-006c5862c29d" config-ref="Database_Config">
					<db:sql ><![CDATA[select * from show where lang= :language ]]></db:sql>
					<db:input-parameters ><![CDATA[#[{
	"language": vars.language
	
}]]]></db:input-parameters>
				</db:select>
			</when>
			<when expression="#[(vars.SeatType)!=null]">
				<db:select doc:name="Select" doc:id="020f4dfc-c368-47e3-a116-b9f64b94f1bb" config-ref="Database_Config">
					<db:sql ><![CDATA[select * from show where seattype = :SeatType;]]></db:sql>
					<db:input-parameters ><![CDATA[#[{
	"SeatType": vars.SeatType
}]]]></db:input-parameters>
				</db:select>
			</when>
			<otherwise >
				<db:select doc:name="Select" doc:id="08cc2492-73a4-4d6c-ad67-8f1f7771c6f9" config-ref="Database_Config">
			<db:sql><![CDATA[select * from show;]]></db:sql>
		</db:select>
			</otherwise>
		</choice>
		<ee:transform doc:name="Transform Message" doc:id="f9950e8c-bb8b-4245-b7c5-1a9706756cb9">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
payload map ( payload01 , indexOfPayload01 ) -> {
	ShowID: payload01.showid as String,
	MovieID: payload01.movieid as String,
	ShowStartTime: payload01.starttime as String default "",
	ShowEndTime: payload01.endtime as String default "",
	SeatType: payload01.seattype default "",
	AvailableSeats: payload01.availableseats default 0,
	language: payload01.lang default "",
	price: payload01.price default 0
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="eb9321c4-0696-41a6-aa80-adfd813bce16" />
	</flow>
	<flow name="GetShowByID" doc:id="c4734f0d-2119-4d7e-9530-bb981e6315db" >
		<db:select doc:name="Select" doc:id="1c97ff51-054d-4677-8f47-8428377c09b3" config-ref="Database_Config">
			<db:sql ><![CDATA[select movies.moviename, show.starttime, show.endtime, show.seattype, show.availableseats, show.lang, movies.price 
from movies inner join show on movies.movieid = show.movieid where showid= :ID; ]]></db:sql>
			<db:input-parameters ><![CDATA[#[{"ID": attributes.uriParams.shows_id}]]]></db:input-parameters>
		</db:select>
		<choice doc:name="Choice" doc:id="7fdeb000-cf04-452c-b18a-2d5b9b61e184" >
			<when expression="#[sizeOf(payload)&gt;0]">
				<ee:transform doc:name="Transform Message" doc:id="4a404893-6971-4e36-a034-acdeaabc9f41">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
payload map ( payload01 , indexOfPayload01 ) -> {
	MovieName: payload01.moviename default "",
	ShowStartTime: payload01.starttime as String default "",
	ShowEndTime: payload01.endtime as String default "",
	SeatType: payload01.seattype default "",
	AvailableSeats: payload01.availableseats default 0,
	language: payload01.lang default "",
	price: payload01.price default 0
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
			</when>
			<otherwise >
				<ee:transform doc:name="Transform Message" doc:id="d4d49087-1e20-4690-a413-ecd2edbbe58e" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	"message": "No Show Available!"
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
			</otherwise>
		</choice>
		<logger level="INFO" doc:name="Logger" doc:id="f2dc0af4-81ed-4a42-867e-80ae6bf3d08d" />
	</flow>
	<flow name="DeleteShowByID" doc:id="c592668e-1d94-472f-873f-73540a260861" >
		<db:delete doc:name="Delete" doc:id="8b5aca33-0517-4bf1-8dbb-ef1c68fc6fb1" config-ref="Database_Config">
			<db:sql ><![CDATA[delete from show where showid = :ID;]]></db:sql>
			<db:input-parameters ><![CDATA[#[{"ID": attributes.uriParams.shows_id}]]]></db:input-parameters>
		</db:delete>
		<ee:transform doc:name="Transform Message" doc:id="724aa61d-f416-495b-a0d2-02d6f339338d" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	"message": "Show Deleted Successfully!"
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</flow>
	<flow name="DeleteMovieByID" doc:id="d48b03e9-b924-44b6-8f2a-6c0aba3ced82" >
		<db:delete doc:name="Delete" doc:id="f3b85c44-919d-4739-bd56-4019c25ba28b" config-ref="Database_Config">
			<db:sql ><![CDATA[delete from movies where movieid = :ID;]]></db:sql>
			<db:input-parameters ><![CDATA[#[{"ID":attributes.uriParams.movie_id}]]]></db:input-parameters>
		</db:delete>
		<ee:transform doc:name="Transform Message" doc:id="c43d9adf-35e7-4c42-ba57-961503373fe0" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	"message": "Movie Deleted Successfully!"
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</flow>
	<sub-flow name="Return_Success_Fail" doc:id="0a07b146-92d2-4e5e-aa79-2b838b5a41cf" >
		<choice doc:name="Choice" doc:id="7472445b-3866-4a50-8c6c-1b7f90841458">
			<when expression="#[payload.affectedRows&gt;0]">
				<ee:transform doc:name="Success" doc:id="392a3ab0-58ea-458e-9357-73016a194c92">
					<ee:message>
						<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
	"message": vars.success
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
			</when>
			<otherwise >
				<ee:transform doc:name="Fail" doc:id="6975cba6-3d89-4eb8-9785-3a62166335f3" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	message: vars.fail
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
			</otherwise>
		</choice>
	</sub-flow>
	<flow name="InsertMovies" doc:id="76d76ffe-d6c3-4a56-9247-9ddec692bad4" >
		<db:insert doc:name="Insert" doc:id="b0527f8a-f9fb-4594-812c-f960e98361d2" config-ref="Database_Config">
			<db:sql ><![CDATA[insert into movies values(:ID, :MovieName, :language, :desc, :price)]]></db:sql>
			<db:input-parameters ><![CDATA[#[{
	"ID": payload.MovieID,
	"MovieName": payload.MovieName,
	"language": payload.Language,
	"desc": payload.MovieDescription,
	"price": payload.Price
	
}]]]></db:input-parameters>
		</db:insert>
		<ee:transform doc:name="Movie Inserted" doc:id="95010047-cd73-4436-830c-d510863527c8" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	message: "Movie Inserted Successfully!"
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		
	</flow>
	<flow name="AddShow" doc:id="5d4241ab-86eb-41d1-85a0-c3d6ea18fa05" >
		<try doc:name="Try" doc:id="eb0fd702-3183-40bc-b3c1-d98b02310cab" >
			<db:insert doc:name="Insert" doc:id="6e5c72db-fa8b-43fe-9437-e78f8ded44ba" config-ref="Database_Config">
			<db:sql><![CDATA[insert  into show (showid, movieid, starttime, endtime, seattype, availableseats, lang, price)
select :ID, movies.movieid, :StartTime, :EndTime, :SeatType, :AvailableSeats, movies.lang, movies.price 
from movies where movies.moviename = :MovieName;]]></db:sql>
			<db:input-parameters><![CDATA[#[{
	"ID": payload.ShowID,
	"MovieName": payload.MovieName,
	"StartTime": payload.ShowStartTime,
	"EndTime": payload.ShowEndTime,
	"SeatType": payload.SeatType,
	"AvailableSeats": payload.AvailableSeats
}]]]></db:input-parameters>
		</db:insert>
			<set-variable value='Show inserted Successfully' doc:name="success" doc:id="711daf54-be38-43d9-bcf3-14a3fcb24d7b" variableName="success"/>
			<set-variable value='Sorry! Show not Inserted..Kindly give the correct Movie Name ' doc:name="fail" doc:id="b8e5c086-cf5c-4bca-93b8-7cf2f586a4ee" variableName="fail"/>
			<flow-ref doc:name="Return Success/Fail" doc:id="961108c9-7a31-4438-8c6a-f514ae45c9b7" name="Return_Success_Fail" />
			<error-handler>
				<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="59217f90-78f0-4100-9268-b6aa8ae25fd2" type="DB:QUERY_EXECUTION">
					<ee:transform doc:name="ShowID Already Exist" doc:id="42245862-8f20-4ff3-9c61-1c9181807a57" >
						<ee:message >
							<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	"message": "Show ID:"++ payload.ShowID ++ " is Already exist!"
}]]></ee:set-payload>
						</ee:message>
					</ee:transform>
				</on-error-continue>
			</error-handler>
		</try>
	
</flow>
	<flow name="BookTicket" doc:id="ff8d8f8d-39e2-47d1-aadb-2d2f622fca67" >
		<choice doc:name="Choice" doc:id="843cb096-d1a7-474a-b883-bcf3a5a76439" >
			<when expression="#[(payload.NoOfPerson&gt;=1 and payload.NoOfPerson&lt;10)]">
				<db:insert doc:name="Insert" doc:id="b71c6f41-cafb-4268-8ead-6c98315f1eee" config-ref="Database_Config">
			<db:sql><![CDATA[insert TOP(1) into bookTicket (movieid, showid, moviename, moviedate, movietime, NoOFPerson,seattype, Totalprice)
select show.movieid, show.showid, :MovieName, :date, :Time , :NoOfPerson, :SeatType, movies.price * :NoOfPerson from show inner join movies 
on show.movieid = movies.movieid
where movies.moviename = :MovieName;
]]></db:sql>
			<db:input-parameters><![CDATA[#[{
	"MovieName": payload.MovieName,
	"date": payload.date,
	"Time": payload.Time,
	"NoOfPerson": payload.NoOfPerson,
	"SeatType": payload.SeatType
}]]]></db:input-parameters>
		</db:insert>
				<db:select doc:name="Select" doc:id="8ccd29a2-8e8b-435d-9dcb-2bd668edc3c1" config-ref="Database_Config">
			<db:sql><![CDATA[select * from bookTicket where bookid = (SELECT MAX(bookid)  FROM bookTicket);]]></db:sql>
		</db:select>
				<ee:transform doc:name="ETicket" doc:id="c4fa4cc6-2234-4f14-b852-e87dfbaca0eb">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json

fun prepareList(list:Array, maxSize: Number) = if(sizeOf(list) >= maxSize )
list
else
prepareList(list ++ [(sizeOf(list) + 1) as Number],maxSize)

---
payload map(ticket, index)->{
   "message": "Movie Booked Successfully. PFB ETicket Details",
	MovieName: ticket.MovieName,
	Audi: randomInt(4)+1,
	Date: ticket.moviedate,
	Time: ticket.movietime,
	SeatNo: prepareList([], ticket.NoOFPerson),
	TotalPrice: ticket.Totalprice
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
			</when>
			<when expression="(payload.NoOfPerson&gt;=10)">
				
		<db:insert doc:name="Insert" doc:id="8dc83c3e-a11f-4c16-a5d5-5d4c0163e80f" config-ref="Database_Config">
			<db:sql><![CDATA[insert TOP(1) into bookTicket (movieid, showid, moviename, moviedate, movietime, NoOFPerson,seattype, Totalprice)
select show.movieid, show.showid, :MovieName, :date, :Time , :NoOfPerson, :SeatType, movies.price * :NoOfPerson from show inner join movies 
on show.movieid = movies.movieid
where movies.moviename = :MovieName;
]]></db:sql>
			<db:input-parameters><![CDATA[#[{
	"MovieName": payload.MovieName,
	"date": payload.date,
	"Time": payload.Time,
	"NoOfPerson": payload.NoOfPerson,
	"SeatType": payload.SeatType
}]]]></db:input-parameters>
		</db:insert>
		<db:update doc:name="Update" doc:id="fffb6241-3888-4452-8ed6-69c1e542d31e" config-ref="Database_Config">
			<db:sql><![CDATA[update bookTicket set Totalprice = Totalprice -(Totalprice * 10/100) where bookid= (SELECT MAX(bookid)  FROM bookTicket) ]]></db:sql>
		</db:update>
				<db:select doc:name="Select" doc:id="ff813606-ca53-4032-81cc-bcff10eb2c3a" config-ref="Database_Config">
			<db:sql><![CDATA[select * from bookTicket where bookid = (SELECT MAX(bookid)  FROM bookTicket);]]></db:sql>
		</db:select>
				<ee:transform doc:name="ETicket" doc:id="12607ecb-6576-4bd0-9521-3c0ddccd325f">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json

fun prepareList(list:Array, maxSize: Number) = if(sizeOf(list) >= maxSize )
list
else
prepareList(list ++ [(sizeOf(list) + 1) as Number],maxSize)
---

payload map(ticket, index)->{
	 "message": "Movie Booked Successfully. PFB ETicket Details",
	MovieName: ticket.MovieName default "",
	Audi: randomInt(4)+1,
	Date: ticket.moviedate,
	Time: ticket.movietime,
	SeatNo: prepareList([], ticket.NoOFPerson),
	"Discount": "10%",
	TotalPrice: ticket.Totalprice
} as Object

]]></ee:set-payload>
			</ee:message>
		</ee:transform>
			</when>
			<otherwise>
				<set-payload value='#["Invalid No of Person. Kindly enter the minimum 1 person to book a ticket!"]' doc:name="Invalid No of Person" doc:id="256ada64-6627-44d2-a796-98d44d5b93bb" />
			</otherwise>
		</choice>
		<try doc:name="Try" doc:id="51f1b51e-a766-47f2-b059-bce4531b8799" >
			<file:write doc:name="ETicket" doc:id="946c04f5-b216-451b-89ca-f27f637b89a5" config-ref="File_Config" path="ticket.csv">
			<file:content><![CDATA[#[output application/json
---
payload]]]></file:content>
		</file:write>
			<error-handler>
				<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="d49d4ccf-61da-48ed-aadf-3fe07d3573d8" >
					<logger level="INFO" doc:name="Logger" doc:id="d66c075e-fe42-4fcd-88e0-5f2bde01d5d2" message="#[payload]"/>
				</on-error-continue>
			</error-handler>
		</try>
		<ee:transform doc:name="Transform Message" doc:id="8d36b536-7235-4064-ace3-6b2a6bc46dfa">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<error-handler >
			<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="c32de268-fbc1-4d24-903e-94fba219e75a" type="DB:QUERY_EXECUTION">
				<ee:transform doc:name="Incorrect details" doc:id="e07c6b40-b731-4b6a-8c94-255902f822cd" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	"message": "Give correct details!"
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
			</on-error-continue>
		</error-handler>
	
</flow>
	<flow name="UpdateMovieByID" doc:id="8ca99a6d-cf43-4e11-8e53-f395cd6913ce" >
		<db:update doc:name="Update" doc:id="4c3b2515-bd9b-40f1-a16e-645431a0c7eb" config-ref="Database_Config">
			<db:sql ><![CDATA[update movies set moviename = :MovieName, moviedescription = :MovieDescription,
lang= :Language, price = :Price where movieid= :MovieID;]]></db:sql>
			<db:input-parameters ><![CDATA[#[{
	"MovieID":attributes.uriParams.movie_id,
	"MovieName": payload.MovieName,
	"MovieDescription": payload.MovieDescription,
	"Language": payload.Language,
	"Price": payload.Price,
	
}]]]></db:input-parameters>
		</db:update>
		<set-variable value="Movie updated Successfully!" doc:name="success" doc:id="fe86e487-8c3b-400f-9d03-9ff5a4a73b9b" variableName="success"/>
		<set-variable value="Movie ID not exist!" doc:name="fail" doc:id="d47a0f18-a8a6-49fe-9d9d-bad0a440aef0" variableName="fail"/>
		<flow-ref doc:name="Return_Success/Fail" doc:id="1699b775-330f-4dc6-9eb0-bebf0f2c589e" name="Return_Success_Fail"/>
	</flow>
	<flow name="UpdateShowByID" doc:id="ab35d6de-faa4-47e9-9b64-0a4b3066af9e" >
		<db:update doc:name="Update" doc:id="accb3e3d-919c-4449-9357-b17aa507a176" config-ref="Database_Config">
			<db:sql ><![CDATA[update show set show.starttime = :ShowStartTime,
show.endtime = :ShowEndTime , show.seattype = :SeatType, 
show.availableseats = :AvailableSeats, show.lang = movies.lang, show.price = :Price
from show inner join movies on show.movieid = movies.movieid  where show.showid = :ShowID;]]></db:sql>
			<db:input-parameters ><![CDATA[#[{
	"ShowID" : attributes.uriParams.shows_id,
	"ShowStartTime": payload.ShowStartTime,
	"ShowEndTime": payload.ShowEndTime,
	"SeatType" : payload.SeatType,
	"AvailableSeats": payload.AvailableSeats,
	"Price": payload.Price
	

}]]]></db:input-parameters>
		</db:update>
		<set-variable value="Show updated Successfully!" doc:name="success" doc:id="0a3da010-25c3-47d4-bfba-d6d1ab686ac9" variableName="success" />
		<set-variable value="Show ID not exist!" doc:name="fail" doc:id="57e3bfef-fc26-45a3-b944-d72e3d914e20" variableName="fail" />
		<flow-ref doc:name="Return_Success/Fail" doc:id="71947f4b-656e-4c59-9ddb-05a0f0013afa" name="Return_Success_Fail"/>
	</flow>
	

</mule>
	
